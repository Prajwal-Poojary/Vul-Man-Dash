{"ast":null,"code":"/**\n * @license Angular v20.1.3\n * (c) 2010-2025 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { inject, Injectable, ANIMATION_MODULE_TYPE, ɵRuntimeError as _RuntimeError, Inject, ViewEncapsulation } from '@angular/core';\nimport { sequence } from './private_export.mjs';\nexport { AUTO_STYLE, AnimationMetadataType, NoopAnimationPlayer, animate, animateChild, animation, group, keyframes, query, stagger, state, style, transition, trigger, useAnimation, AnimationGroupPlayer as ɵAnimationGroupPlayer, ɵPRE_STYLE } from './private_export.mjs';\n\n/**\n * An injectable service that produces an animation sequence programmatically within an\n * Angular component or directive.\n * Provided by the `BrowserAnimationsModule` or `NoopAnimationsModule`.\n *\n * @usageNotes\n *\n * To use this service, add it to your component or directive as a dependency.\n * The service is instantiated along with your component.\n *\n * Apps do not typically need to create their own animation players, but if you\n * do need to, follow these steps:\n *\n * 1. Use the <code>[AnimationBuilder.build](api/animations/AnimationBuilder#build)()</code> method\n * to create a programmatic animation. The method returns an `AnimationFactory` instance.\n *\n * 2. Use the factory object to create an `AnimationPlayer` and attach it to a DOM element.\n *\n * 3. Use the player object to control the animation programmatically.\n *\n * For example:\n *\n * ```ts\n * // import the service from BrowserAnimationsModule\n * import {AnimationBuilder} from '@angular/animations';\n * // require the service as a dependency\n * class MyCmp {\n *   constructor(private _builder: AnimationBuilder) {}\n *\n *   makeAnimation(element: any) {\n *     // first define a reusable animation\n *     const myAnimation = this._builder.build([\n *       style({ width: 0 }),\n *       animate(1000, style({ width: '100px' }))\n *     ]);\n *\n *     // use the returned factory object to create a player\n *     const player = myAnimation.create(element);\n *\n *     player.play();\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nlet AnimationBuilder = /*#__PURE__*/(() => {\n  class AnimationBuilder {\n    static ɵfac = function AnimationBuilder_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AnimationBuilder)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: AnimationBuilder,\n      factory: () => (() => inject(BrowserAnimationBuilder))(),\n      providedIn: 'root'\n    });\n  }\n  return AnimationBuilder;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * A factory object returned from the\n * <code>[AnimationBuilder.build](api/animations/AnimationBuilder#build)()</code>\n * method.\n *\n * @publicApi\n */\nclass AnimationFactory {}\nlet BrowserAnimationBuilder = /*#__PURE__*/(() => {\n  class BrowserAnimationBuilder extends AnimationBuilder {\n    animationModuleType = inject(ANIMATION_MODULE_TYPE, {\n      optional: true\n    });\n    _nextAnimationId = 0;\n    _renderer;\n    constructor(rootRenderer, doc) {\n      super();\n      const typeData = {\n        id: '0',\n        encapsulation: ViewEncapsulation.None,\n        styles: [],\n        data: {\n          animation: []\n        }\n      };\n      this._renderer = rootRenderer.createRenderer(doc.body, typeData);\n      if (this.animationModuleType === null && !isAnimationRenderer(this._renderer)) {\n        // We only support AnimationRenderer & DynamicDelegationRenderer for this AnimationBuilder\n        throw new _RuntimeError(3600 /* RuntimeErrorCode.BROWSER_ANIMATION_BUILDER_INJECTED_WITHOUT_ANIMATIONS */, (typeof ngDevMode === 'undefined' || ngDevMode) && 'Angular detected that the `AnimationBuilder` was injected, but animation support was not enabled. ' + 'Please make sure that you enable animations in your application by calling `provideAnimations()` or `provideAnimationsAsync()` function.');\n      }\n    }\n    build(animation) {\n      const id = this._nextAnimationId;\n      this._nextAnimationId++;\n      const entry = Array.isArray(animation) ? sequence(animation) : animation;\n      issueAnimationCommand(this._renderer, null, id, 'register', [entry]);\n      return new BrowserAnimationFactory(id, this._renderer);\n    }\n    static ɵfac = function BrowserAnimationBuilder_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || BrowserAnimationBuilder)(i0.ɵɵinject(i0.RendererFactory2), i0.ɵɵinject(DOCUMENT));\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: BrowserAnimationBuilder,\n      factory: BrowserAnimationBuilder.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return BrowserAnimationBuilder;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nclass BrowserAnimationFactory extends AnimationFactory {\n  _id;\n  _renderer;\n  constructor(_id, _renderer) {\n    super();\n    this._id = _id;\n    this._renderer = _renderer;\n  }\n  create(element, options) {\n    return new RendererAnimationPlayer(this._id, element, options || {}, this._renderer);\n  }\n}\nclass RendererAnimationPlayer {\n  id;\n  element;\n  _renderer;\n  parentPlayer = null;\n  _started = false;\n  constructor(id, element, options, _renderer) {\n    this.id = id;\n    this.element = element;\n    this._renderer = _renderer;\n    this._command('create', options);\n  }\n  _listen(eventName, callback) {\n    return this._renderer.listen(this.element, `@@${this.id}:${eventName}`, callback);\n  }\n  _command(command, ...args) {\n    issueAnimationCommand(this._renderer, this.element, this.id, command, args);\n  }\n  onDone(fn) {\n    this._listen('done', fn);\n  }\n  onStart(fn) {\n    this._listen('start', fn);\n  }\n  onDestroy(fn) {\n    this._listen('destroy', fn);\n  }\n  init() {\n    this._command('init');\n  }\n  hasStarted() {\n    return this._started;\n  }\n  play() {\n    this._command('play');\n    this._started = true;\n  }\n  pause() {\n    this._command('pause');\n  }\n  restart() {\n    this._command('restart');\n  }\n  finish() {\n    this._command('finish');\n  }\n  destroy() {\n    this._command('destroy');\n  }\n  reset() {\n    this._command('reset');\n    this._started = false;\n  }\n  setPosition(p) {\n    this._command('setPosition', p);\n  }\n  getPosition() {\n    return unwrapAnimationRenderer(this._renderer)?.engine?.players[this.id]?.getPosition() ?? 0;\n  }\n  totalTime = 0;\n}\nfunction issueAnimationCommand(renderer, element, id, command, args) {\n  renderer.setProperty(element, `@@${id}:${command}`, args);\n}\n/**\n * The following 2 methods cannot reference their correct types (AnimationRenderer &\n * DynamicDelegationRenderer) since this would introduce a import cycle.\n */\nfunction unwrapAnimationRenderer(renderer) {\n  const type = renderer.ɵtype;\n  if (type === 0 /* AnimationRendererType.Regular */) {\n    return renderer;\n  } else if (type === 1 /* AnimationRendererType.Delegated */) {\n    return renderer.animationRenderer;\n  }\n  return null;\n}\nfunction isAnimationRenderer(renderer) {\n  const type = renderer.ɵtype;\n  return type === 0 /* AnimationRendererType.Regular */ || type === 1 /* AnimationRendererType.Delegated */;\n}\nexport { AnimationBuilder, AnimationFactory, sequence, BrowserAnimationBuilder as ɵBrowserAnimationBuilder };","map":{"version":3,"names":["DOCUMENT","i0","inject","Injectable","ANIMATION_MODULE_TYPE","ɵRuntimeError","_RuntimeError","Inject","ViewEncapsulation","sequence","AUTO_STYLE","AnimationMetadataType","NoopAnimationPlayer","animate","animateChild","animation","group","keyframes","query","stagger","state","style","transition","trigger","useAnimation","AnimationGroupPlayer","ɵAnimationGroupPlayer","ɵPRE_STYLE","AnimationBuilder","ɵfac","AnimationBuilder_Factory","__ngFactoryType__","ɵprov","ɵɵdefineInjectable","token","factory","BrowserAnimationBuilder","providedIn","ngDevMode","AnimationFactory","animationModuleType","optional","_nextAnimationId","_renderer","constructor","rootRenderer","doc","typeData","id","encapsulation","None","styles","data","createRenderer","body","isAnimationRenderer","build","entry","Array","isArray","issueAnimationCommand","BrowserAnimationFactory","BrowserAnimationBuilder_Factory","ɵɵinject","RendererFactory2","_id","create","element","options","RendererAnimationPlayer","parentPlayer","_started","_command","_listen","eventName","callback","listen","command","args","onDone","fn","onStart","onDestroy","init","hasStarted","play","pause","restart","finish","destroy","reset","setPosition","p","getPosition","unwrapAnimationRenderer","engine","players","totalTime","renderer","setProperty","type","ɵtype","animationRenderer","ɵBrowserAnimationBuilder"],"sources":["/app/node_modules/@angular/animations/fesm2022/animations.mjs"],"sourcesContent":["/**\n * @license Angular v20.1.3\n * (c) 2010-2025 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { inject, Injectable, ANIMATION_MODULE_TYPE, ɵRuntimeError as _RuntimeError, Inject, ViewEncapsulation } from '@angular/core';\nimport { sequence } from './private_export.mjs';\nexport { AUTO_STYLE, AnimationMetadataType, NoopAnimationPlayer, animate, animateChild, animation, group, keyframes, query, stagger, state, style, transition, trigger, useAnimation, AnimationGroupPlayer as ɵAnimationGroupPlayer, ɵPRE_STYLE } from './private_export.mjs';\n\n/**\n * An injectable service that produces an animation sequence programmatically within an\n * Angular component or directive.\n * Provided by the `BrowserAnimationsModule` or `NoopAnimationsModule`.\n *\n * @usageNotes\n *\n * To use this service, add it to your component or directive as a dependency.\n * The service is instantiated along with your component.\n *\n * Apps do not typically need to create their own animation players, but if you\n * do need to, follow these steps:\n *\n * 1. Use the <code>[AnimationBuilder.build](api/animations/AnimationBuilder#build)()</code> method\n * to create a programmatic animation. The method returns an `AnimationFactory` instance.\n *\n * 2. Use the factory object to create an `AnimationPlayer` and attach it to a DOM element.\n *\n * 3. Use the player object to control the animation programmatically.\n *\n * For example:\n *\n * ```ts\n * // import the service from BrowserAnimationsModule\n * import {AnimationBuilder} from '@angular/animations';\n * // require the service as a dependency\n * class MyCmp {\n *   constructor(private _builder: AnimationBuilder) {}\n *\n *   makeAnimation(element: any) {\n *     // first define a reusable animation\n *     const myAnimation = this._builder.build([\n *       style({ width: 0 }),\n *       animate(1000, style({ width: '100px' }))\n *     ]);\n *\n *     // use the returned factory object to create a player\n *     const player = myAnimation.create(element);\n *\n *     player.play();\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nclass AnimationBuilder {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.3\", ngImport: i0, type: AnimationBuilder, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.1.3\", ngImport: i0, type: AnimationBuilder, providedIn: 'root', useFactory: () => inject(BrowserAnimationBuilder) });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.3\", ngImport: i0, type: AnimationBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root', useFactory: () => inject(BrowserAnimationBuilder) }]\n        }] });\n/**\n * A factory object returned from the\n * <code>[AnimationBuilder.build](api/animations/AnimationBuilder#build)()</code>\n * method.\n *\n * @publicApi\n */\nclass AnimationFactory {\n}\nclass BrowserAnimationBuilder extends AnimationBuilder {\n    animationModuleType = inject(ANIMATION_MODULE_TYPE, { optional: true });\n    _nextAnimationId = 0;\n    _renderer;\n    constructor(rootRenderer, doc) {\n        super();\n        const typeData = {\n            id: '0',\n            encapsulation: ViewEncapsulation.None,\n            styles: [],\n            data: { animation: [] },\n        };\n        this._renderer = rootRenderer.createRenderer(doc.body, typeData);\n        if (this.animationModuleType === null && !isAnimationRenderer(this._renderer)) {\n            // We only support AnimationRenderer & DynamicDelegationRenderer for this AnimationBuilder\n            throw new _RuntimeError(3600 /* RuntimeErrorCode.BROWSER_ANIMATION_BUILDER_INJECTED_WITHOUT_ANIMATIONS */, (typeof ngDevMode === 'undefined' || ngDevMode) &&\n                'Angular detected that the `AnimationBuilder` was injected, but animation support was not enabled. ' +\n                    'Please make sure that you enable animations in your application by calling `provideAnimations()` or `provideAnimationsAsync()` function.');\n        }\n    }\n    build(animation) {\n        const id = this._nextAnimationId;\n        this._nextAnimationId++;\n        const entry = Array.isArray(animation) ? sequence(animation) : animation;\n        issueAnimationCommand(this._renderer, null, id, 'register', [entry]);\n        return new BrowserAnimationFactory(id, this._renderer);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.3\", ngImport: i0, type: BrowserAnimationBuilder, deps: [{ token: i0.RendererFactory2 }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.1.3\", ngImport: i0, type: BrowserAnimationBuilder, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.3\", ngImport: i0, type: BrowserAnimationBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: i0.RendererFactory2 }, { type: Document, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }] });\nclass BrowserAnimationFactory extends AnimationFactory {\n    _id;\n    _renderer;\n    constructor(_id, _renderer) {\n        super();\n        this._id = _id;\n        this._renderer = _renderer;\n    }\n    create(element, options) {\n        return new RendererAnimationPlayer(this._id, element, options || {}, this._renderer);\n    }\n}\nclass RendererAnimationPlayer {\n    id;\n    element;\n    _renderer;\n    parentPlayer = null;\n    _started = false;\n    constructor(id, element, options, _renderer) {\n        this.id = id;\n        this.element = element;\n        this._renderer = _renderer;\n        this._command('create', options);\n    }\n    _listen(eventName, callback) {\n        return this._renderer.listen(this.element, `@@${this.id}:${eventName}`, callback);\n    }\n    _command(command, ...args) {\n        issueAnimationCommand(this._renderer, this.element, this.id, command, args);\n    }\n    onDone(fn) {\n        this._listen('done', fn);\n    }\n    onStart(fn) {\n        this._listen('start', fn);\n    }\n    onDestroy(fn) {\n        this._listen('destroy', fn);\n    }\n    init() {\n        this._command('init');\n    }\n    hasStarted() {\n        return this._started;\n    }\n    play() {\n        this._command('play');\n        this._started = true;\n    }\n    pause() {\n        this._command('pause');\n    }\n    restart() {\n        this._command('restart');\n    }\n    finish() {\n        this._command('finish');\n    }\n    destroy() {\n        this._command('destroy');\n    }\n    reset() {\n        this._command('reset');\n        this._started = false;\n    }\n    setPosition(p) {\n        this._command('setPosition', p);\n    }\n    getPosition() {\n        return unwrapAnimationRenderer(this._renderer)?.engine?.players[this.id]?.getPosition() ?? 0;\n    }\n    totalTime = 0;\n}\nfunction issueAnimationCommand(renderer, element, id, command, args) {\n    renderer.setProperty(element, `@@${id}:${command}`, args);\n}\n/**\n * The following 2 methods cannot reference their correct types (AnimationRenderer &\n * DynamicDelegationRenderer) since this would introduce a import cycle.\n */\nfunction unwrapAnimationRenderer(renderer) {\n    const type = renderer.ɵtype;\n    if (type === 0 /* AnimationRendererType.Regular */) {\n        return renderer;\n    }\n    else if (type === 1 /* AnimationRendererType.Delegated */) {\n        return renderer.animationRenderer;\n    }\n    return null;\n}\nfunction isAnimationRenderer(renderer) {\n    const type = renderer.ɵtype;\n    return type === 0 /* AnimationRendererType.Regular */ || type === 1 /* AnimationRendererType.Delegated */;\n}\n\nexport { AnimationBuilder, AnimationFactory, sequence, BrowserAnimationBuilder as ɵBrowserAnimationBuilder };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}