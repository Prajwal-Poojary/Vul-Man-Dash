{"ast":null,"code":"export function getPasswordStrength(password) {\n  const hasMinLength = password.length >= 8;\n  const hasUpperCase = /[A-Z]/.test(password);\n  const hasLowerCase = /[a-z]/.test(password);\n  const hasNumeric = /[0-9]/.test(password);\n  const hasSpecialChar = /[!@#$%^&*(),.?\":{}|<>]/.test(password);\n  let score = 0;\n  if (hasMinLength) score++;\n  if (hasUpperCase) score++;\n  if (hasLowerCase) score++;\n  if (hasNumeric) score++;\n  if (hasSpecialChar) score++;\n  let message;\n  let color;\n  switch (score) {\n    case 0:\n      message = 'Very Weak';\n      color = '#dc2626'; // Professional red\n      break;\n    case 1:\n      message = 'Weak';\n      color = '#ea580c'; // Professional orange\n      break;\n    case 2:\n      message = 'Fair';\n      color = '#d97706'; // Professional amber\n      break;\n    case 3:\n      message = 'Good';\n      color = '#16a34a'; // Professional green\n      break;\n    case 4:\n      message = 'Strong';\n      color = '#0284c7'; // Professional blue\n      break;\n    case 5:\n      message = 'Very Strong';\n      color = '#0f766e'; // Professional teal\n      break;\n    default:\n      message = 'Very Weak';\n      color = '#dc2626';\n  }\n  return {\n    score,\n    hasMinLength,\n    hasUpperCase,\n    hasLowerCase,\n    hasNumeric,\n    hasSpecialChar,\n    message,\n    color\n  };\n}\nexport function passwordStrengthValidator(control) {\n  const value = control.value;\n  if (!value) {\n    return null;\n  }\n  const strength = getPasswordStrength(value);\n  const errors = {};\n  if (!strength.hasMinLength) {\n    errors['minlength'] = {\n      requiredLength: 8,\n      actualLength: value.length\n    };\n  }\n  if (!strength.hasUpperCase) {\n    errors['noUpperCase'] = true;\n  }\n  if (!strength.hasLowerCase) {\n    errors['noLowerCase'] = true;\n  }\n  if (!strength.hasNumeric) {\n    errors['noNumeric'] = true;\n  }\n  if (!strength.hasSpecialChar) {\n    errors['noSpecialChar'] = true;\n  }\n  if (strength.score < 3) {\n    errors['weakPassword'] = {\n      message: strength.message,\n      score: strength.score,\n      color: strength.color\n    };\n  }\n  return Object.keys(errors).length ? errors : null;\n}","map":{"version":3,"names":["getPasswordStrength","password","hasMinLength","length","hasUpperCase","test","hasLowerCase","hasNumeric","hasSpecialChar","score","message","color","passwordStrengthValidator","control","value","strength","errors","requiredLength","actualLength","Object","keys"],"sources":["/app/src/app/shared/validators/password-strength.validator.ts"],"sourcesContent":["import { AbstractControl, ValidationErrors } from '@angular/forms';\n\nexport interface PasswordStrength {\n  score: number;\n  hasMinLength: boolean;\n  hasUpperCase: boolean;\n  hasLowerCase: boolean;\n  hasNumeric: boolean;\n  hasSpecialChar: boolean;\n  message: string;\n  color: string;\n}\n\nexport function getPasswordStrength(password: string): PasswordStrength {\n  const hasMinLength = password.length >= 8;\n  const hasUpperCase = /[A-Z]/.test(password);\n  const hasLowerCase = /[a-z]/.test(password);\n  const hasNumeric = /[0-9]/.test(password);\n  const hasSpecialChar = /[!@#$%^&*(),.?\":{}|<>]/.test(password);\n\n  let score = 0;\n  if (hasMinLength) score++;\n  if (hasUpperCase) score++;\n  if (hasLowerCase) score++;\n  if (hasNumeric) score++;\n  if (hasSpecialChar) score++;\n\n  let message: string;\n  let color: string;\n\n  switch (score) {\n    case 0:\n      message = 'Very Weak';\n      color = '#dc2626'; // Professional red\n      break;\n    case 1:\n      message = 'Weak';\n      color = '#ea580c'; // Professional orange\n      break;\n    case 2:\n      message = 'Fair';\n      color = '#d97706'; // Professional amber\n      break;\n    case 3:\n      message = 'Good';\n      color = '#16a34a'; // Professional green\n      break;\n    case 4:\n      message = 'Strong';\n      color = '#0284c7'; // Professional blue\n      break;\n    case 5:\n      message = 'Very Strong';\n      color = '#0f766e'; // Professional teal\n      break;\n    default:\n      message = 'Very Weak';\n      color = '#dc2626';\n  }\n\n  return {\n    score,\n    hasMinLength,\n    hasUpperCase,\n    hasLowerCase,\n    hasNumeric,\n    hasSpecialChar,\n    message,\n    color\n  };\n}\n\nexport function passwordStrengthValidator(control: AbstractControl): ValidationErrors | null {\n  const value: string = control.value;\n\n  if (!value) {\n    return null;\n  }\n\n  const strength = getPasswordStrength(value);\n  const errors: ValidationErrors = {};\n\n  if (!strength.hasMinLength) {\n    errors['minlength'] = { requiredLength: 8, actualLength: value.length };\n  }\n  if (!strength.hasUpperCase) {\n    errors['noUpperCase'] = true;\n  }\n  if (!strength.hasLowerCase) {\n    errors['noLowerCase'] = true;\n  }\n  if (!strength.hasNumeric) {\n    errors['noNumeric'] = true;\n  }\n  if (!strength.hasSpecialChar) {\n    errors['noSpecialChar'] = true;\n  }\n\n  if (strength.score < 3) {\n    errors['weakPassword'] = {\n      message: strength.message,\n      score: strength.score,\n      color: strength.color\n    };\n  }\n\n  return Object.keys(errors).length ? errors : null;\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}