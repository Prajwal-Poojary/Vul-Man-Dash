{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let SearchService = /*#__PURE__*/(() => {\n  class SearchService {\n    searchTermSource = new BehaviorSubject('');\n    currentSearchTerm$ = this.searchTermSource.asObservable();\n    updateSearchTerm(term) {\n      this.searchTermSource.next(term);\n    }\n    static ɵfac = function SearchService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || SearchService)();\n    };\n    static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: SearchService,\n      factory: SearchService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return SearchService;\n})();","map":{"version":3,"names":["BehaviorSubject","SearchService","searchTermSource","currentSearchTerm$","asObservable","updateSearchTerm","term","next","factory","ɵfac","providedIn"],"sources":["/app/src/app/services/search.service.ts"],"sourcesContent":["// src/app/services/search.service.ts\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SearchService {\n  private searchTermSource = new BehaviorSubject<string>('');\n  currentSearchTerm$ = this.searchTermSource.asObservable();\n\n  updateSearchTerm(term: string) {\n    this.searchTermSource.next(term);\n  }\n}\n"],"mappings":"AAEA,SAASA,eAAe,QAAQ,MAAM;;AAKtC,WAAaC,aAAa;EAApB,MAAOA,aAAa;IAChBC,gBAAgB,GAAG,IAAIF,eAAe,CAAS,EAAE,CAAC;IAC1DG,kBAAkB,GAAG,IAAI,CAACD,gBAAgB,CAACE,YAAY,EAAE;IAEzDC,gBAAgBA,CAACC,IAAY;MAC3B,IAAI,CAACJ,gBAAgB,CAACK,IAAI,CAACD,IAAI,CAAC;IAClC;;uCANWL,aAAa;IAAA;;aAAbA,aAAa;MAAAO,OAAA,EAAbP,aAAa,CAAAQ,IAAA;MAAAC,UAAA,EAFZ;IAAM;;SAEPT,aAAa;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}