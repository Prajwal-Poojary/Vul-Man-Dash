{"ast":null,"code":"import { authGuard } from './core/guards/auth.guard';\nexport const routes = [{\n  path: '',\n  redirectTo: 'login',\n  pathMatch: 'full'\n},\n// Auth Pages - Direct load for fast initial access\n{\n  path: 'login',\n  loadComponent: () => import('./pages/login/login.component').then(m => m.LoginComponent)\n}, {\n  path: 'forgot-password',\n  loadComponent: () => import('./pages/forgot-password/forgot-password.component').then(m => m.ForgotPasswordComponent)\n}, {\n  path: 'register',\n  loadComponent: () => import('./pages/register/register.component').then(m => m.RegisterComponent)\n}, {\n  path: 'reset-password',\n  loadComponent: () => import('./pages/reset-password/reset-password.component').then(m => m.ResetPasswordComponent)\n},\n// Protected Routes - Lazy loaded for performance\n{\n  path: 'myreport',\n  loadComponent: () => import('./myreport/myreport.component').then(m => m.MyreportComponent),\n  canActivate: [authGuard]\n}, {\n  path: 'create-report',\n  loadComponent: () => import('./create-report/create-report.component').then(m => m.CreateReportComponent),\n  canActivate: [authGuard]\n}, {\n  path: 'password-verify',\n  loadComponent: () => import('./password-verify/password-verify.component').then(m => m.PasswordVerifyComponent),\n  canActivate: [authGuard]\n}, {\n  path: 'dashboard',\n  loadComponent: () => import('./dash/dash.component').then(m => m.DashComponent),\n  canActivate: [authGuard]\n}, {\n  path: 'report',\n  loadComponent: () => import('./report/report.component').then(m => m.ReportComponent),\n  canActivate: [authGuard]\n}, {\n  path: '**',\n  redirectTo: 'login'\n}];","map":{"version":3,"names":["authGuard","routes","path","redirectTo","pathMatch","loadComponent","then","m","LoginComponent","ForgotPasswordComponent","RegisterComponent","ResetPasswordComponent","MyreportComponent","canActivate","CreateReportComponent","PasswordVerifyComponent","DashComponent","ReportComponent"],"sources":["/app/src/app/app.routes.ts"],"sourcesContent":["import { Routes } from '@angular/router';\nimport { authGuard } from './core/guards/auth.guard';\n\nexport const routes: Routes = [\n  { path: '', redirectTo: 'login', pathMatch: 'full' },\n  \n  // Auth Pages - Direct load for fast initial access\n  { \n    path: 'login', \n    loadComponent: () => import('./pages/login/login.component').then(m => m.LoginComponent)\n  },\n  { \n    path: 'forgot-password', \n    loadComponent: () => import('./pages/forgot-password/forgot-password.component').then(m => m.ForgotPasswordComponent)\n  },\n  { \n    path: 'register', \n    loadComponent: () => import('./pages/register/register.component').then(m => m.RegisterComponent)\n  },\n  { \n    path: 'reset-password', \n    loadComponent: () => import('./pages/reset-password/reset-password.component').then(m => m.ResetPasswordComponent)\n  },\n\n  // Protected Routes - Lazy loaded for performance\n  { \n    path: 'myreport', \n    loadComponent: () => import('./myreport/myreport.component').then(m => m.MyreportComponent),\n    canActivate: [authGuard]\n  },\n  { \n    path: 'create-report', \n    loadComponent: () => import('./create-report/create-report.component').then(m => m.CreateReportComponent),\n    canActivate: [authGuard]\n  },\n  { \n    path: 'password-verify', \n    loadComponent: () => import('./password-verify/password-verify.component').then(m => m.PasswordVerifyComponent),\n    canActivate: [authGuard]\n  },\n  { \n    path: 'dashboard', \n    loadComponent: () => import('./dash/dash.component').then(m => m.DashComponent),\n    canActivate: [authGuard]\n  },\n  { \n    path: 'report', \n    loadComponent: () => import('./report/report.component').then(m => m.ReportComponent),\n    canActivate: [authGuard]\n  },\n\n  { path: '**', redirectTo: 'login' },\n];"],"mappings":"AACA,SAASA,SAAS,QAAQ,0BAA0B;AAEpD,OAAO,MAAMC,MAAM,GAAW,CAC5B;EAAEC,IAAI,EAAE,EAAE;EAAEC,UAAU,EAAE,OAAO;EAAEC,SAAS,EAAE;AAAM,CAAE;AAEpD;AACA;EACEF,IAAI,EAAE,OAAO;EACbG,aAAa,EAAEA,CAAA,KAAM,MAAM,CAAC,+BAA+B,CAAC,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,cAAc;CACxF,EACD;EACEN,IAAI,EAAE,iBAAiB;EACvBG,aAAa,EAAEA,CAAA,KAAM,MAAM,CAAC,mDAAmD,CAAC,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACE,uBAAuB;CACrH,EACD;EACEP,IAAI,EAAE,UAAU;EAChBG,aAAa,EAAEA,CAAA,KAAM,MAAM,CAAC,qCAAqC,CAAC,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACG,iBAAiB;CACjG,EACD;EACER,IAAI,EAAE,gBAAgB;EACtBG,aAAa,EAAEA,CAAA,KAAM,MAAM,CAAC,iDAAiD,CAAC,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACI,sBAAsB;CAClH;AAED;AACA;EACET,IAAI,EAAE,UAAU;EAChBG,aAAa,EAAEA,CAAA,KAAM,MAAM,CAAC,+BAA+B,CAAC,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACK,iBAAiB,CAAC;EAC3FC,WAAW,EAAE,CAACb,SAAS;CACxB,EACD;EACEE,IAAI,EAAE,eAAe;EACrBG,aAAa,EAAEA,CAAA,KAAM,MAAM,CAAC,yCAAyC,CAAC,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACO,qBAAqB,CAAC;EACzGD,WAAW,EAAE,CAACb,SAAS;CACxB,EACD;EACEE,IAAI,EAAE,iBAAiB;EACvBG,aAAa,EAAEA,CAAA,KAAM,MAAM,CAAC,6CAA6C,CAAC,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACQ,uBAAuB,CAAC;EAC/GF,WAAW,EAAE,CAACb,SAAS;CACxB,EACD;EACEE,IAAI,EAAE,WAAW;EACjBG,aAAa,EAAEA,CAAA,KAAM,MAAM,CAAC,uBAAuB,CAAC,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACS,aAAa,CAAC;EAC/EH,WAAW,EAAE,CAACb,SAAS;CACxB,EACD;EACEE,IAAI,EAAE,QAAQ;EACdG,aAAa,EAAEA,CAAA,KAAM,MAAM,CAAC,2BAA2B,CAAC,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACU,eAAe,CAAC;EACrFJ,WAAW,EAAE,CAACb,SAAS;CACxB,EAED;EAAEE,IAAI,EAAE,IAAI;EAAEC,UAAU,EAAE;AAAO,CAAE,CACpC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}