{"ast":null,"code":"import jsPDF from 'jspdf';\nimport 'jspdf-autotable';\nexport class TextBasedPDFGenerator {\n  pdf;\n  margin = 10;\n  pageWidth = 210;\n  pageHeight = 297;\n  pdfWidth;\n  pdfHeight;\n  currentY = 10;\n  contentTable = [];\n  destinations = {};\n  pageNumber = 1;\n  logicalPage = 1;\n  constructor() {\n    this.pdf = new jsPDF('p', 'mm', 'a4');\n    this.pdfWidth = this.pageWidth - 2 * this.margin;\n    this.pdfHeight = this.pageHeight - 2 * this.margin;\n  }\n  generateReport(form, findings, dashboardData, logoDataURL, selectedManifestType, updateProgress) {\n    updateProgress(10, 100);\n    // Generate cover page\n    this.generateCoverPage(form, logoDataURL);\n    updateProgress(20, 100);\n    // Add table of contents (placeholder pages for now)\n    this.addNewPage();\n    this.generateTableOfContents();\n    updateProgress(30, 100);\n    // Generate report sections\n    this.generateScanManifest(form, selectedManifestType);\n    updateProgress(40, 100);\n    this.generateExecutiveSummary(dashboardData);\n    updateProgress(50, 100);\n    this.generateFindings(findings);\n    updateProgress(60, 100);\n    this.generateVulnerabilityRatingTable();\n    updateProgress(70, 100);\n    this.generateDetailedVulnerabilities(findings, selectedManifestType);\n    updateProgress(80, 100);\n    this.generateConclusion(findings);\n    updateProgress(90, 100);\n    // Update TOC with actual page numbers and add clickable links\n    this.updateTableOfContentsWithLinks();\n    // Add page numbers to all pages\n    this.addPageNumbers();\n    updateProgress(100, 100);\n    return this.pdf;\n  }\n  addNewPage() {\n    this.pdf.addPage();\n    this.pageNumber++;\n    this.addPageBorder();\n    this.currentY = this.margin;\n  }\n  addPageBorder() {\n    this.pdf.setDrawColor(0);\n    this.pdf.setLineWidth(0.5);\n    this.pdf.rect(5, 5, 200, 287);\n  }\n  checkPageBreak(requiredHeight) {\n    if (this.currentY + requiredHeight > this.pdfHeight - 20) {\n      this.addNewPage();\n    }\n  }\n  addText(text, fontSize = 12, fontStyle = 'normal', color = [0, 0, 0]) {\n    this.pdf.setFont('helvetica', fontStyle);\n    this.pdf.setFontSize(fontSize);\n    this.pdf.setTextColor(color[0], color[1], color[2]);\n    const lines = this.pdf.splitTextToSize(text, this.pdfWidth);\n    const lineHeight = fontSize * 0.4;\n    this.checkPageBreak(lines.length * lineHeight + 5);\n    for (let i = 0; i < lines.length; i++) {\n      this.pdf.text(lines[i], this.margin, this.currentY + lineHeight);\n      this.currentY += lineHeight;\n    }\n    this.currentY += 3; // Add spacing after text\n  }\n  addHeading(text, level = 1) {\n    const fontSize = level === 1 ? 18 : level === 2 ? 16 : 14;\n    const fontStyle = 'bold';\n    this.checkPageBreak(fontSize * 0.4 + 10);\n    // Add destination for internal links\n    const destination = text.replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\n    this.destinations[destination] = this.pageNumber;\n    this.pdf.setFont('helvetica', fontStyle);\n    this.pdf.setFontSize(fontSize);\n    this.pdf.setTextColor(52, 52, 52); // Dark gray\n    this.currentY += 8; // Space before heading\n    this.pdf.text(text, this.margin, this.currentY);\n    this.currentY += fontSize * 0.4 + 5; // Space after heading\n    // Add underline for main headings\n    if (level <= 2) {\n      this.pdf.setDrawColor(180, 180, 180);\n      this.pdf.setLineWidth(0.3);\n      this.pdf.line(this.margin, this.currentY - 2, this.margin + this.pdfWidth, this.currentY - 2);\n      this.currentY += 3;\n    }\n  }\n  generateCoverPage(form, logoDataURL) {\n    this.currentY = 50;\n    // Add logo if available\n    if (logoDataURL) {\n      try {\n        this.pdf.addImage(logoDataURL, 'PNG', this.pageWidth / 2 - 30, this.currentY, 60, 30);\n        this.currentY += 40;\n      } catch (error) {\n        console.log('Could not add logo to PDF');\n      }\n    }\n    // Title\n    this.pdf.setFont('helvetica', 'bold');\n    this.pdf.setFontSize(24);\n    this.pdf.setTextColor(52, 52, 52);\n    const titleLines = this.pdf.splitTextToSize(form.logoName, this.pdfWidth);\n    for (const line of titleLines) {\n      this.pdf.text(line, this.pageWidth / 2, this.currentY, {\n        align: 'center'\n      });\n      this.currentY += 12;\n    }\n    this.currentY += 20;\n    // Report metadata\n    this.pdf.setFont('helvetica', 'normal');\n    this.pdf.setFontSize(14);\n    this.pdf.setTextColor(80, 80, 80);\n    const dateText = `Date: ${new Date(form.reportDate).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    })}`;\n    this.pdf.text(dateText, this.pageWidth / 2, this.currentY, {\n      align: 'center'\n    });\n    this.currentY += 8;\n    const clientText = `Prepared for: ${form.client}`;\n    this.pdf.text(clientText, this.pageWidth / 2, this.currentY, {\n      align: 'center'\n    });\n    this.currentY += 40;\n    // Report Details Table\n    this.addHeading('Report Details', 2);\n    this.generateReportDetailsTable(form);\n  }\n  generateReportDetailsTable(form) {\n    const tableData = [['Report Type', form.reportType], ['Audit Type', form.auditType], ['Assessment Period', `${form.periodStart} - ${form.periodEnd}`], ['Scope', form.scopes.join('\\n')]];\n    this.checkPageBreak(60);\n    // Draw table manually for better control\n    const rowHeight = 12;\n    const colWidths = [60, 130];\n    let tableY = this.currentY;\n    for (let i = 0; i < tableData.length; i++) {\n      const row = tableData[i];\n      // Check if content needs multiple lines\n      const contentLines = this.pdf.splitTextToSize(row[1], colWidths[1] - 6);\n      const actualRowHeight = Math.max(rowHeight, contentLines.length * 6 + 6);\n      this.checkPageBreak(actualRowHeight + 5);\n      if (this.currentY !== tableY + i * rowHeight) {\n        tableY = this.currentY;\n      }\n      // Draw cell borders\n      this.pdf.setDrawColor(180, 180, 180);\n      this.pdf.setLineWidth(0.3);\n      this.pdf.rect(this.margin, tableY, colWidths[0], actualRowHeight);\n      this.pdf.rect(this.margin + colWidths[0], tableY, colWidths[1], actualRowHeight);\n      // Add cell content\n      this.pdf.setFont('helvetica', 'bold');\n      this.pdf.setFontSize(10);\n      this.pdf.setTextColor(52, 52, 52);\n      this.pdf.text(row[0], this.margin + 3, tableY + 8);\n      this.pdf.setFont('helvetica', 'normal');\n      for (let j = 0; j < contentLines.length; j++) {\n        this.pdf.text(contentLines[j], this.margin + colWidths[0] + 3, tableY + 8 + j * 6);\n      }\n      tableY += actualRowHeight;\n    }\n    this.currentY = tableY + 10;\n  }\n  generateTableOfContents() {\n    this.addHeading('Table of Contents', 1);\n    // Initialize content table\n    this.contentTable = [{\n      title: '1. Scan Manifest',\n      page: 3\n    }, {\n      title: '2. Executive Summary',\n      page: 4\n    }, {\n      title: '3. Findings',\n      page: 5\n    }, {\n      title: '4. Vulnerability Rating Table',\n      page: 6\n    }, {\n      title: '5. Vulnerability Details',\n      page: 7\n    }, {\n      title: '6. Conclusion',\n      page: 8\n    }];\n    const tocStartY = this.currentY;\n    const rowHeight = 8;\n    const titleWidth = this.pdfWidth * 0.82;\n    const pageWidth = this.pdfWidth * 0.18;\n    for (let i = 0; i < this.contentTable.length; i++) {\n      this.checkPageBreak(rowHeight + 5);\n      const item = this.contentTable[i];\n      const y = this.currentY;\n      // Section title with dots\n      this.pdf.setFont('helvetica', 'normal');\n      this.pdf.setFontSize(12);\n      this.pdf.setTextColor(52, 52, 52);\n      this.pdf.text(`• ${item.title}`, this.margin, y + 6);\n      // Dots line\n      this.pdf.setDrawColor(180, 180, 180);\n      this.pdf.setLineWidth(0.2);\n      const dotsStartX = this.margin + this.pdf.getTextWidth(`• ${item.title}`) + 5;\n      const dotsEndX = this.margin + titleWidth - 5;\n      for (let x = dotsStartX; x < dotsEndX; x += 3) {\n        this.pdf.circle(x, y + 3, 0.3, 'F');\n      }\n      // Page number (will be updated later)\n      this.pdf.text(item.page.toString(), this.margin + titleWidth + 10, y + 6);\n      this.currentY += rowHeight;\n    }\n    this.currentY += 10;\n  }\n  generateScanManifest(form, selectedManifestType) {\n    this.addNewPage();\n    this.destinations['scanmanifest'] = this.pageNumber;\n    this.addHeading('1. Scan Manifest', 1);\n    const manifestData = [['Type', selectedManifestType], ['Application', form.manifest.appName], ['Tester', form.manifest.testerName], ['Version', form.manifest.docVersion], ['Initial Assessment Date', form.manifest.initDate], ['Re-assessment Date', form.manifest.reDate || 'N/A'], ['Tools Used', form.manifest.toolsUsed], ['Scope', form.manifest.scopes.join('\\n')], ['Description', form.manifest.description]];\n    this.generateTable(['Field', 'Value'], manifestData);\n    // Add signature section\n    this.currentY += 20;\n    this.addText('Yours sincerely,', 12, 'normal');\n    this.addText('From, EyeQ Dot Net Private Limited. (CIN: U80900KA2022PTC169528)', 12, 'normal');\n    this.currentY += 40;\n    this.addText(form.signature.name, 12, 'bold');\n    this.addText(form.signature.title, 12, 'normal');\n    this.addText(`Place: ${form.signature.place}`, 12, 'normal');\n  }\n  generateExecutiveSummary(dashboardData) {\n    this.addNewPage();\n    this.destinations['executivesummary'] = this.pageNumber;\n    this.addHeading('2. Executive Summary', 1);\n    if (dashboardData?.dashboardData?.severityDistribution) {\n      const severity = dashboardData.dashboardData.severityDistribution;\n      // Severity summary boxes\n      this.addText('Vulnerability Distribution:', 14, 'bold');\n      this.currentY += 5;\n      const severityData = [['Critical', severity.critical || 0, '#d32f2f'], ['High', severity.high || 0, '#f57c00'], ['Medium', severity.medium || 0, '#ffa000'], ['Low', severity.low || 0, '#689f38'], ['Informative', severity.informative || 0, '#1976d2']];\n      for (const [level, count, color] of severityData) {\n        this.pdf.setFont('helvetica', 'bold');\n        this.pdf.setFontSize(12);\n        this.pdf.setTextColor(52, 52, 52);\n        this.pdf.text(`${level}: ${count}`, this.margin, this.currentY + 6);\n        this.currentY += 8;\n      }\n      const total = severityData.reduce((sum, [, count]) => sum + count, 0);\n      this.currentY += 5;\n      this.pdf.setFont('helvetica', 'bold');\n      this.pdf.setFontSize(14);\n      this.pdf.text(`Total Vulnerabilities: ${total}`, this.margin, this.currentY + 6);\n      this.currentY += 15;\n    }\n  }\n  generateFindings(findings) {\n    this.addNewPage();\n    this.destinations['findings'] = this.pageNumber;\n    this.addHeading('3. Findings', 1);\n    const headers = ['ID', 'Vulnerability', 'Severity', 'Status'];\n    const rows = findings.map((finding, index) => [(index + 1).toString(), finding.vuln, finding.severity, finding.status]);\n    this.generateTable(headers, rows);\n  }\n  generateVulnerabilityRatingTable() {\n    this.addNewPage();\n    this.destinations['vulnerabilityratingtable'] = this.pageNumber;\n    this.addHeading('4. Vulnerability Rating Table', 1);\n    const headers = ['Risk Level', 'Description', 'Remediation Timeline'];\n    const rows = [['Critical', 'Immediate threat to business operations or data security', 'Immediate remediation required (within 24 hours)'], ['High', 'Significant risk that could lead to system compromise', 'Remediate within 7 days'], ['Medium', 'Vulnerability that could be exploited under certain conditions', 'Remediate within 30 days'], ['Low', 'Minimal impact with limited exploit potential', 'Remediate in next maintenance window'], ['Informative', 'Best practice recommendations', 'Consider for future improvements']];\n    this.generateTable(headers, rows);\n  }\n  generateDetailedVulnerabilities(findings, selectedManifestType) {\n    this.addNewPage();\n    this.destinations['vulnerabilitydetails'] = this.pageNumber;\n    this.addHeading('5. Vulnerability Details', 1);\n    for (let i = 0; i < findings.length; i++) {\n      const finding = findings[i];\n      if (i > 0) {\n        this.addNewPage();\n      }\n      // Add confidential header for first finding\n      if (i === 0) {\n        this.pdf.setFont('helvetica', 'bold');\n        this.pdf.setFontSize(16);\n        this.pdf.setTextColor(26, 35, 126);\n        const title = `${selectedManifestType} vulnerabilities reports`;\n        this.pdf.text(title, this.pageWidth / 2, this.currentY, {\n          align: 'center'\n        });\n        this.currentY += 10;\n        this.pdf.setFont('helvetica', 'bold');\n        this.pdf.setFontSize(12);\n        this.pdf.setTextColor(25, 118, 210);\n        this.pdf.text('CONFIDENTIAL', this.margin + this.pdfWidth - 30, this.currentY);\n        this.currentY += 15;\n        // Add horizontal line\n        this.pdf.setDrawColor(224, 224, 224);\n        this.pdf.setLineWidth(0.3);\n        this.pdf.line(this.margin, this.currentY, this.margin + this.pdfWidth, this.currentY);\n        this.currentY += 10;\n      }\n      // Vulnerability header\n      const severityColor = this.getSeverityColor(finding.severity);\n      this.pdf.setFont('helvetica', 'bold');\n      this.pdf.setFontSize(14);\n      this.pdf.setTextColor(52, 52, 52);\n      const headerText = `${i + 1}) ${finding.threat} Threat: `;\n      this.pdf.text(headerText, this.margin, this.currentY + 6);\n      // Severity in color\n      this.pdf.setTextColor(severityColor[0], severityColor[1], severityColor[2]);\n      const headerWidth = this.pdf.getTextWidth(headerText);\n      this.pdf.text(`(${finding.severity})`, this.margin + headerWidth, this.currentY + 6);\n      this.currentY += 12;\n      // Reset color for content\n      this.pdf.setTextColor(52, 52, 52);\n      // Vulnerability details\n      if (finding.threatDetails) {\n        this.addLabeledText('Threat Details:', finding.threatDetails);\n      }\n      if (finding.vuln) {\n        this.addLabeledText('Vulnerability:', finding.vuln);\n      }\n      if (finding.vulnUrl) {\n        this.addLabeledText('Vulnerable URL:', finding.vulnUrl);\n      }\n      if (finding.impact) {\n        this.addLabeledText('Impact:', finding.impact);\n      }\n      if (finding.stepsToReproduce) {\n        this.addLabeledText('Steps to Reproduce:', finding.stepsToReproduce);\n      }\n      // POC Images (if any)\n      if (finding.pocType === 'poc' && finding.pocDataURL?.length) {\n        this.addPOCImages('POC:', finding.pocDataURL);\n      }\n      if (finding.pocType === 'retesting' && finding.retestingPocDataURL?.length) {\n        this.addPOCImages('Retesting POC:', finding.retestingPocDataURL);\n      }\n      if (finding.mitigation) {\n        this.addLabeledText('Mitigation:', finding.mitigation);\n      }\n      if (finding.references) {\n        this.addLabeledText('References:', finding.references);\n      }\n    }\n  }\n  generateConclusion(findings) {\n    this.addNewPage();\n    this.destinations['conclusion'] = this.pageNumber;\n    this.addHeading('6. Conclusion', 1);\n    const totalFindings = findings.length;\n    const criticalCount = findings.filter(f => f.severity === 'Critical').length;\n    const highCount = findings.filter(f => f.severity === 'High').length;\n    let conclusionText = `This security assessment identified ${totalFindings} vulnerabilities across the tested application. `;\n    if (criticalCount > 0) {\n      conclusionText += `${criticalCount} critical vulnerabilities require immediate attention. `;\n    }\n    if (highCount > 0) {\n      conclusionText += `${highCount} high-severity vulnerabilities should be addressed within 7 days. `;\n    }\n    conclusionText += `It is recommended to prioritize remediation based on the severity levels outlined in this report and implement the suggested mitigation strategies to enhance the overall security posture.`;\n    this.addText(conclusionText, 12, 'normal');\n  }\n  addLabeledText(label, content) {\n    this.checkPageBreak(20);\n    // Add a subtle background box for labeled text sections\n    this.pdf.setFillColor(248, 249, 250); // Very light gray background\n    this.pdf.setDrawColor(224, 224, 224); // Light border\n    this.pdf.setLineWidth(0.2);\n    const labelHeight = 8;\n    const lines = this.pdf.splitTextToSize(content, this.pdfWidth - 15);\n    const contentHeight = lines.length * 6 + 10;\n    const totalHeight = labelHeight + contentHeight;\n    // Draw background box\n    this.pdf.rect(this.margin - 2, this.currentY - 2, this.pdfWidth + 4, totalHeight, 'FD');\n    // Add label\n    this.pdf.setFont('helvetica', 'bold');\n    this.pdf.setFontSize(12);\n    this.pdf.setTextColor(52, 52, 52);\n    this.pdf.text(label, this.margin, this.currentY + 6);\n    this.currentY += labelHeight;\n    // Add content with indentation\n    this.pdf.setFont('helvetica', 'normal');\n    this.pdf.setFontSize(11);\n    this.pdf.setTextColor(80, 80, 80);\n    for (const line of lines) {\n      this.checkPageBreak(8);\n      this.pdf.text(line, this.margin + 5, this.currentY + 6);\n      this.currentY += 6;\n    }\n    this.currentY += 8; // Extra spacing after labeled sections\n  }\n  addPOCImages(label, images) {\n    this.addText(label, 12, 'bold');\n    for (const img of images) {\n      if (img?.url) {\n        try {\n          this.checkPageBreak(80);\n          this.pdf.addImage(img.url, 'PNG', this.margin + 20, this.currentY, this.pdfWidth - 40, 60);\n          this.currentY += 65;\n          if (img.caption) {\n            this.pdf.setFont('helvetica', 'italic');\n            this.pdf.setFontSize(10);\n            this.pdf.setTextColor(85, 85, 85);\n            const captionLines = this.pdf.splitTextToSize(img.caption, this.pdfWidth - 40);\n            for (const line of captionLines) {\n              this.pdf.text(line, this.pageWidth / 2, this.currentY, {\n                align: 'center'\n              });\n              this.currentY += 5;\n            }\n            this.currentY += 5;\n          }\n        } catch (error) {\n          console.log('Could not add POC image to PDF');\n        }\n      }\n    }\n  }\n  generateTable(headers, rows) {\n    const rowHeight = 12;\n    const colWidth = this.pdfWidth / headers.length;\n    this.checkPageBreak((rows.length + 1) * rowHeight + 10);\n    // Draw headers\n    this.pdf.setDrawColor(0);\n    this.pdf.setLineWidth(0.3);\n    this.pdf.setFillColor(41, 128, 185);\n    for (let i = 0; i < headers.length; i++) {\n      const x = this.margin + i * colWidth;\n      this.pdf.rect(x, this.currentY, colWidth, rowHeight, 'FD');\n      this.pdf.setFont('helvetica', 'bold');\n      this.pdf.setFontSize(10);\n      this.pdf.setTextColor(255, 255, 255);\n      this.pdf.text(headers[i], x + 2, this.currentY + 8);\n    }\n    this.currentY += rowHeight;\n    // Draw rows\n    this.pdf.setTextColor(52, 52, 52);\n    this.pdf.setFont('helvetica', 'normal');\n    for (const row of rows) {\n      this.checkPageBreak(rowHeight + 5);\n      for (let i = 0; i < row.length; i++) {\n        const x = this.margin + i * colWidth;\n        this.pdf.rect(x, this.currentY, colWidth, rowHeight, 'D');\n        const cellLines = this.pdf.splitTextToSize(row[i], colWidth - 4);\n        for (let j = 0; j < Math.min(cellLines.length, 1); j++) {\n          this.pdf.text(cellLines[j], x + 2, this.currentY + 8 + j * 5);\n        }\n      }\n      this.currentY += rowHeight;\n    }\n    this.currentY += 10;\n  }\n  getSeverityColor(severity) {\n    switch (severity.toLowerCase()) {\n      case 'critical':\n        return [211, 47, 47];\n      case 'high':\n        return [245, 124, 0];\n      case 'medium':\n        return [255, 160, 0];\n      case 'low':\n        return [104, 159, 56];\n      default:\n        return [25, 118, 210];\n    }\n  }\n  updateTableOfContentsWithLinks() {\n    // Go back to TOC page (page 2)\n    this.pdf.setPage(2);\n    // Update content table with actual page numbers\n    this.contentTable = [{\n      title: '1. Scan Manifest',\n      page: Object.values(this.destinations)[0] || 3\n    }, {\n      title: '2. Executive Summary',\n      page: Object.values(this.destinations)[1] || 4\n    }, {\n      title: '3. Findings',\n      page: Object.values(this.destinations)[2] || 5\n    }, {\n      title: '4. Vulnerability Rating Table',\n      page: Object.values(this.destinations)[3] || 6\n    }, {\n      title: '5. Vulnerability Details',\n      page: Object.values(this.destinations)[4] || 7\n    }, {\n      title: '6. Conclusion',\n      page: Object.values(this.destinations)[5] || 8\n    }];\n    // Clear the TOC area and redraw\n    this.pdf.setFillColor(255, 255, 255);\n    this.pdf.rect(this.margin, 40, this.pdfWidth, 100, 'F');\n    let tocY = 50;\n    const rowHeight = 8;\n    const titleWidth = this.pdfWidth * 0.82;\n    this.pdf.setFont('helvetica', 'normal');\n    this.pdf.setFontSize(12);\n    this.pdf.setTextColor(52, 52, 52);\n    for (const item of this.contentTable) {\n      // Create clickable link\n      const destination = item.title.replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\n      this.pdf.link(this.margin, tocY - 4, titleWidth + 20, rowHeight, {\n        pageNumber: this.destinations[destination] || item.page\n      });\n      // Section title with dots\n      this.pdf.text(`• ${item.title}`, this.margin, tocY + 6);\n      // Dots line\n      this.pdf.setDrawColor(180, 180, 180);\n      this.pdf.setLineWidth(0.2);\n      const dotsStartX = this.margin + this.pdf.getTextWidth(`• ${item.title}`) + 5;\n      const dotsEndX = this.margin + titleWidth - 5;\n      for (let x = dotsStartX; x < dotsEndX; x += 3) {\n        this.pdf.circle(x, tocY + 3, 0.3, 'F');\n      }\n      // Page number\n      const actualPage = this.destinations[destination] || item.page;\n      this.pdf.text(actualPage.toString(), this.margin + titleWidth + 10, tocY + 6);\n      tocY += rowHeight;\n    }\n  }\n  addPageNumbers() {\n    const totalPages = this.pdf.getNumberOfPages();\n    for (let i = 1; i <= totalPages; i++) {\n      this.pdf.setPage(i);\n      this.pdf.setFont('helvetica', 'normal');\n      this.pdf.setFontSize(10);\n      this.pdf.setTextColor(80, 80, 80);\n      this.pdf.text(`Page ${i}`, this.pageWidth / 2, this.pageHeight - 5, {\n        align: 'center'\n      });\n    }\n  }\n}","map":{"version":3,"names":["jsPDF","TextBasedPDFGenerator","pdf","margin","pageWidth","pageHeight","pdfWidth","pdfHeight","currentY","contentTable","destinations","pageNumber","logicalPage","constructor","generateReport","form","findings","dashboardData","logoDataURL","selectedManifestType","updateProgress","generateCoverPage","addNewPage","generateTableOfContents","generateScanManifest","generateExecutiveSummary","generateFindings","generateVulnerabilityRatingTable","generateDetailedVulnerabilities","generateConclusion","updateTableOfContentsWithLinks","addPageNumbers","addPage","addPageBorder","setDrawColor","setLineWidth","rect","checkPageBreak","requiredHeight","addText","text","fontSize","fontStyle","color","setFont","setFontSize","setTextColor","lines","splitTextToSize","lineHeight","length","i","addHeading","level","destination","replace","toLowerCase","line","addImage","error","console","log","titleLines","logoName","align","dateText","Date","reportDate","toLocaleDateString","year","month","day","clientText","client","generateReportDetailsTable","tableData","reportType","auditType","periodStart","periodEnd","scopes","join","rowHeight","colWidths","tableY","row","contentLines","actualRowHeight","Math","max","j","title","page","tocStartY","titleWidth","item","y","dotsStartX","getTextWidth","dotsEndX","x","circle","toString","manifestData","manifest","appName","testerName","docVersion","initDate","reDate","toolsUsed","description","generateTable","signature","name","place","severityDistribution","severity","severityData","critical","high","medium","low","informative","count","total","reduce","sum","headers","rows","map","finding","index","vuln","status","severityColor","getSeverityColor","headerText","threat","headerWidth","threatDetails","addLabeledText","vulnUrl","impact","stepsToReproduce","pocType","pocDataURL","addPOCImages","retestingPocDataURL","mitigation","references","totalFindings","criticalCount","filter","f","highCount","conclusionText","label","content","setFillColor","labelHeight","contentHeight","totalHeight","images","img","url","caption","captionLines","colWidth","cellLines","min","setPage","Object","values","tocY","link","actualPage","totalPages","getNumberOfPages"],"sources":["/app/src/app/report/report-text-pdf.service.ts"],"sourcesContent":["import jsPDF from 'jspdf';\nimport 'jspdf-autotable';\n\nexport interface ContentItem {\n  title: string;\n  page: number;\n}\n\nexport interface Finding {\n  threat: string;\n  threatDetails: string;\n  vuln: string;\n  vulnUrl: string;\n  impact: string;\n  stepsToReproduce: string;\n  pocType: string;\n  pocDataURL?: any[];\n  retestingPocDataURL?: any[];\n  mitigation: string;\n  references: string;\n  severity: string;\n  status: string;\n}\n\nexport interface ReportForm {\n  logoName: string;\n  client: string;\n  reportDate: string;\n  auditType: string;\n  reportType: string;\n  scopes: string[];\n  periodStart: string;\n  periodEnd: string;\n  manifest: {\n    appName: string;\n    testerName: string;\n    docVersion: string;\n    initDate: string;\n    reDate: string;\n    toolsUsed: string;\n    description: string;\n    scopes: string[];\n  };\n  signature: {\n    name: string;\n    title: string;\n    place: string;\n  };\n}\n\nexport class TextBasedPDFGenerator {\n  private pdf: jsPDF;\n  private margin = 10;\n  private pageWidth = 210;\n  private pageHeight = 297;\n  private pdfWidth: number;\n  private pdfHeight: number;\n  private currentY = 10;\n  private contentTable: ContentItem[] = [];\n  private destinations: { [key: string]: number } = {};\n  private pageNumber = 1;\n  private logicalPage = 1;\n\n  constructor() {\n    this.pdf = new jsPDF('p', 'mm', 'a4');\n    this.pdfWidth = this.pageWidth - 2 * this.margin;\n    this.pdfHeight = this.pageHeight - 2 * this.margin;\n  }\n\n  public generateReport(\n    form: ReportForm,\n    findings: Finding[],\n    dashboardData: any,\n    logoDataURL: string,\n    selectedManifestType: string,\n    updateProgress: (progress: number, total: number) => void\n  ): jsPDF {\n    updateProgress(10, 100);\n\n    // Generate cover page\n    this.generateCoverPage(form, logoDataURL);\n    updateProgress(20, 100);\n\n    // Add table of contents (placeholder pages for now)\n    this.addNewPage();\n    this.generateTableOfContents();\n    updateProgress(30, 100);\n\n    // Generate report sections\n    this.generateScanManifest(form, selectedManifestType);\n    updateProgress(40, 100);\n\n    this.generateExecutiveSummary(dashboardData);\n    updateProgress(50, 100);\n\n    this.generateFindings(findings);\n    updateProgress(60, 100);\n\n    this.generateVulnerabilityRatingTable();\n    updateProgress(70, 100);\n\n    this.generateDetailedVulnerabilities(findings, selectedManifestType);\n    updateProgress(80, 100);\n\n    this.generateConclusion(findings);\n    updateProgress(90, 100);\n\n    // Update TOC with actual page numbers and add clickable links\n    this.updateTableOfContentsWithLinks();\n    \n    // Add page numbers to all pages\n    this.addPageNumbers();\n    updateProgress(100, 100);\n\n    return this.pdf;\n  }\n\n  private addNewPage(): void {\n    this.pdf.addPage();\n    this.pageNumber++;\n    this.addPageBorder();\n    this.currentY = this.margin;\n  }\n\n  private addPageBorder(): void {\n    this.pdf.setDrawColor(0);\n    this.pdf.setLineWidth(0.5);\n    this.pdf.rect(5, 5, 200, 287);\n  }\n\n  private checkPageBreak(requiredHeight: number): void {\n    if (this.currentY + requiredHeight > this.pdfHeight - 20) {\n      this.addNewPage();\n    }\n  }\n\n  private addText(text: string, fontSize: number = 12, fontStyle: string = 'normal', color: number[] = [0, 0, 0]): void {\n    this.pdf.setFont('helvetica', fontStyle);\n    this.pdf.setFontSize(fontSize);\n    this.pdf.setTextColor(color[0], color[1], color[2]);\n    \n    const lines = this.pdf.splitTextToSize(text, this.pdfWidth);\n    const lineHeight = fontSize * 0.4;\n    \n    this.checkPageBreak(lines.length * lineHeight + 5);\n    \n    for (let i = 0; i < lines.length; i++) {\n      this.pdf.text(lines[i], this.margin, this.currentY + lineHeight);\n      this.currentY += lineHeight;\n    }\n    this.currentY += 3; // Add spacing after text\n  }\n\n  private addHeading(text: string, level: number = 1): void {\n    const fontSize = level === 1 ? 18 : level === 2 ? 16 : 14;\n    const fontStyle = 'bold';\n    \n    this.checkPageBreak(fontSize * 0.4 + 10);\n    \n    // Add destination for internal links\n    const destination = text.replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\n    this.destinations[destination] = this.pageNumber;\n    \n    this.pdf.setFont('helvetica', fontStyle);\n    this.pdf.setFontSize(fontSize);\n    this.pdf.setTextColor(52, 52, 52); // Dark gray\n    \n    this.currentY += 8; // Space before heading\n    this.pdf.text(text, this.margin, this.currentY);\n    this.currentY += fontSize * 0.4 + 5; // Space after heading\n    \n    // Add underline for main headings\n    if (level <= 2) {\n      this.pdf.setDrawColor(180, 180, 180);\n      this.pdf.setLineWidth(0.3);\n      this.pdf.line(this.margin, this.currentY - 2, this.margin + this.pdfWidth, this.currentY - 2);\n      this.currentY += 3;\n    }\n  }\n\n  private generateCoverPage(form: ReportForm, logoDataURL: string): void {\n    this.currentY = 50;\n\n    // Add logo if available\n    if (logoDataURL) {\n      try {\n        this.pdf.addImage(logoDataURL, 'PNG', this.pageWidth/2 - 30, this.currentY, 60, 30);\n        this.currentY += 40;\n      } catch (error) {\n        console.log('Could not add logo to PDF');\n      }\n    }\n\n    // Title\n    this.pdf.setFont('helvetica', 'bold');\n    this.pdf.setFontSize(24);\n    this.pdf.setTextColor(52, 52, 52);\n    const titleLines = this.pdf.splitTextToSize(form.logoName, this.pdfWidth);\n    for (const line of titleLines) {\n      this.pdf.text(line, this.pageWidth/2, this.currentY, { align: 'center' });\n      this.currentY += 12;\n    }\n\n    this.currentY += 20;\n\n    // Report metadata\n    this.pdf.setFont('helvetica', 'normal');\n    this.pdf.setFontSize(14);\n    this.pdf.setTextColor(80, 80, 80);\n    \n    const dateText = `Date: ${new Date(form.reportDate).toLocaleDateString('en-US', { \n      year: 'numeric', month: 'long', day: 'numeric' \n    })}`;\n    this.pdf.text(dateText, this.pageWidth/2, this.currentY, { align: 'center' });\n    this.currentY += 8;\n    \n    const clientText = `Prepared for: ${form.client}`;\n    this.pdf.text(clientText, this.pageWidth/2, this.currentY, { align: 'center' });\n    this.currentY += 40;\n\n    // Report Details Table\n    this.addHeading('Report Details', 2);\n    this.generateReportDetailsTable(form);\n  }\n\n  private generateReportDetailsTable(form: ReportForm): void {\n    const tableData = [\n      ['Report Type', form.reportType],\n      ['Audit Type', form.auditType],\n      ['Assessment Period', `${form.periodStart} - ${form.periodEnd}`],\n      ['Scope', form.scopes.join('\\n')]\n    ];\n\n    this.checkPageBreak(60);\n\n    // Draw table manually for better control\n    const rowHeight = 12;\n    const colWidths = [60, 130];\n    let tableY = this.currentY;\n\n    for (let i = 0; i < tableData.length; i++) {\n      const row = tableData[i];\n      \n      // Check if content needs multiple lines\n      const contentLines = this.pdf.splitTextToSize(row[1], colWidths[1] - 6);\n      const actualRowHeight = Math.max(rowHeight, contentLines.length * 6 + 6);\n      \n      this.checkPageBreak(actualRowHeight + 5);\n      if (this.currentY !== tableY + (i * rowHeight)) {\n        tableY = this.currentY;\n      }\n\n      // Draw cell borders\n      this.pdf.setDrawColor(180, 180, 180);\n      this.pdf.setLineWidth(0.3);\n      this.pdf.rect(this.margin, tableY, colWidths[0], actualRowHeight);\n      this.pdf.rect(this.margin + colWidths[0], tableY, colWidths[1], actualRowHeight);\n\n      // Add cell content\n      this.pdf.setFont('helvetica', 'bold');\n      this.pdf.setFontSize(10);\n      this.pdf.setTextColor(52, 52, 52);\n      this.pdf.text(row[0], this.margin + 3, tableY + 8);\n\n      this.pdf.setFont('helvetica', 'normal');\n      for (let j = 0; j < contentLines.length; j++) {\n        this.pdf.text(contentLines[j], this.margin + colWidths[0] + 3, tableY + 8 + (j * 6));\n      }\n\n      tableY += actualRowHeight;\n    }\n\n    this.currentY = tableY + 10;\n  }\n\n  private generateTableOfContents(): void {\n    this.addHeading('Table of Contents', 1);\n    \n    // Initialize content table\n    this.contentTable = [\n      { title: '1. Scan Manifest', page: 3 },\n      { title: '2. Executive Summary', page: 4 },\n      { title: '3. Findings', page: 5 },\n      { title: '4. Vulnerability Rating Table', page: 6 },\n      { title: '5. Vulnerability Details', page: 7 },\n      { title: '6. Conclusion', page: 8 }\n    ];\n\n    const tocStartY = this.currentY;\n    const rowHeight = 8;\n    const titleWidth = this.pdfWidth * 0.82;\n    const pageWidth = this.pdfWidth * 0.18;\n\n    for (let i = 0; i < this.contentTable.length; i++) {\n      this.checkPageBreak(rowHeight + 5);\n      \n      const item = this.contentTable[i];\n      const y = this.currentY;\n\n      // Section title with dots\n      this.pdf.setFont('helvetica', 'normal');\n      this.pdf.setFontSize(12);\n      this.pdf.setTextColor(52, 52, 52);\n      this.pdf.text(`• ${item.title}`, this.margin, y + 6);\n\n      // Dots line\n      this.pdf.setDrawColor(180, 180, 180);\n      this.pdf.setLineWidth(0.2);\n      const dotsStartX = this.margin + this.pdf.getTextWidth(`• ${item.title}`) + 5;\n      const dotsEndX = this.margin + titleWidth - 5;\n      \n      for (let x = dotsStartX; x < dotsEndX; x += 3) {\n        this.pdf.circle(x, y + 3, 0.3, 'F');\n      }\n\n      // Page number (will be updated later)\n      this.pdf.text(item.page.toString(), this.margin + titleWidth + 10, y + 6);\n\n      this.currentY += rowHeight;\n    }\n\n    this.currentY += 10;\n  }\n\n  private generateScanManifest(form: ReportForm, selectedManifestType: string): void {\n    this.addNewPage();\n    this.destinations['scanmanifest'] = this.pageNumber;\n    this.addHeading('1. Scan Manifest', 1);\n\n    const manifestData = [\n      ['Type', selectedManifestType],\n      ['Application', form.manifest.appName],\n      ['Tester', form.manifest.testerName],\n      ['Version', form.manifest.docVersion],\n      ['Initial Assessment Date', form.manifest.initDate],\n      ['Re-assessment Date', form.manifest.reDate || 'N/A'],\n      ['Tools Used', form.manifest.toolsUsed],\n      ['Scope', form.manifest.scopes.join('\\n')],\n      ['Description', form.manifest.description]\n    ];\n\n    this.generateTable(['Field', 'Value'], manifestData);\n\n    // Add signature section\n    this.currentY += 20;\n    this.addText('Yours sincerely,', 12, 'normal');\n    this.addText('From, EyeQ Dot Net Private Limited. (CIN: U80900KA2022PTC169528)', 12, 'normal');\n    this.currentY += 40;\n    this.addText(form.signature.name, 12, 'bold');\n    this.addText(form.signature.title, 12, 'normal');\n    this.addText(`Place: ${form.signature.place}`, 12, 'normal');\n  }\n\n  private generateExecutiveSummary(dashboardData: any): void {\n    this.addNewPage();\n    this.destinations['executivesummary'] = this.pageNumber;\n    this.addHeading('2. Executive Summary', 1);\n\n    if (dashboardData?.dashboardData?.severityDistribution) {\n      const severity = dashboardData.dashboardData.severityDistribution;\n      \n      // Severity summary boxes\n      this.addText('Vulnerability Distribution:', 14, 'bold');\n      this.currentY += 5;\n\n      const severityData = [\n        ['Critical', severity.critical || 0, '#d32f2f'],\n        ['High', severity.high || 0, '#f57c00'],\n        ['Medium', severity.medium || 0, '#ffa000'],\n        ['Low', severity.low || 0, '#689f38'],\n        ['Informative', severity.informative || 0, '#1976d2']\n      ];\n\n      for (const [level, count, color] of severityData) {\n        this.pdf.setFont('helvetica', 'bold');\n        this.pdf.setFontSize(12);\n        this.pdf.setTextColor(52, 52, 52);\n        this.pdf.text(`${level}: ${count}`, this.margin, this.currentY + 6);\n        this.currentY += 8;\n      }\n\n      const total = severityData.reduce((sum, [, count]) => sum + (count as number), 0);\n      this.currentY += 5;\n      this.pdf.setFont('helvetica', 'bold');\n      this.pdf.setFontSize(14);\n      this.pdf.text(`Total Vulnerabilities: ${total}`, this.margin, this.currentY + 6);\n      this.currentY += 15;\n    }\n  }\n\n  private generateFindings(findings: Finding[]): void {\n    this.addNewPage();\n    this.destinations['findings'] = this.pageNumber;\n    this.addHeading('3. Findings', 1);\n\n    const headers = ['ID', 'Vulnerability', 'Severity', 'Status'];\n    const rows = findings.map((finding, index) => [\n      (index + 1).toString(),\n      finding.vuln,\n      finding.severity,\n      finding.status\n    ]);\n\n    this.generateTable(headers, rows);\n  }\n\n  private generateVulnerabilityRatingTable(): void {\n    this.addNewPage();\n    this.destinations['vulnerabilityratingtable'] = this.pageNumber;\n    this.addHeading('4. Vulnerability Rating Table', 1);\n\n    const headers = ['Risk Level', 'Description', 'Remediation Timeline'];\n    const rows = [\n      ['Critical', 'Immediate threat to business operations or data security', 'Immediate remediation required (within 24 hours)'],\n      ['High', 'Significant risk that could lead to system compromise', 'Remediate within 7 days'],\n      ['Medium', 'Vulnerability that could be exploited under certain conditions', 'Remediate within 30 days'],\n      ['Low', 'Minimal impact with limited exploit potential', 'Remediate in next maintenance window'],\n      ['Informative', 'Best practice recommendations', 'Consider for future improvements']\n    ];\n\n    this.generateTable(headers, rows);\n  }\n\n  private generateDetailedVulnerabilities(findings: Finding[], selectedManifestType: string): void {\n    this.addNewPage();\n    this.destinations['vulnerabilitydetails'] = this.pageNumber;\n    this.addHeading('5. Vulnerability Details', 1);\n\n    for (let i = 0; i < findings.length; i++) {\n      const finding = findings[i];\n      \n      if (i > 0) {\n        this.addNewPage();\n      }\n\n      // Add confidential header for first finding\n      if (i === 0) {\n        this.pdf.setFont('helvetica', 'bold');\n        this.pdf.setFontSize(16);\n        this.pdf.setTextColor(26, 35, 126);\n        const title = `${selectedManifestType} vulnerabilities reports`;\n        this.pdf.text(title, this.pageWidth/2, this.currentY, { align: 'center' });\n        this.currentY += 10;\n\n        this.pdf.setFont('helvetica', 'bold');\n        this.pdf.setFontSize(12);\n        this.pdf.setTextColor(25, 118, 210);\n        this.pdf.text('CONFIDENTIAL', this.margin + this.pdfWidth - 30, this.currentY);\n        this.currentY += 15;\n\n        // Add horizontal line\n        this.pdf.setDrawColor(224, 224, 224);\n        this.pdf.setLineWidth(0.3);\n        this.pdf.line(this.margin, this.currentY, this.margin + this.pdfWidth, this.currentY);\n        this.currentY += 10;\n      }\n\n      // Vulnerability header\n      const severityColor = this.getSeverityColor(finding.severity);\n      this.pdf.setFont('helvetica', 'bold');\n      this.pdf.setFontSize(14);\n      this.pdf.setTextColor(52, 52, 52);\n      \n      const headerText = `${i + 1}) ${finding.threat} Threat: `;\n      this.pdf.text(headerText, this.margin, this.currentY + 6);\n      \n      // Severity in color\n      this.pdf.setTextColor(severityColor[0], severityColor[1], severityColor[2]);\n      const headerWidth = this.pdf.getTextWidth(headerText);\n      this.pdf.text(`(${finding.severity})`, this.margin + headerWidth, this.currentY + 6);\n      this.currentY += 12;\n\n      // Reset color for content\n      this.pdf.setTextColor(52, 52, 52);\n\n      // Vulnerability details\n      if (finding.threatDetails) {\n        this.addLabeledText('Threat Details:', finding.threatDetails);\n      }\n      if (finding.vuln) {\n        this.addLabeledText('Vulnerability:', finding.vuln);\n      }\n      if (finding.vulnUrl) {\n        this.addLabeledText('Vulnerable URL:', finding.vulnUrl);\n      }\n      if (finding.impact) {\n        this.addLabeledText('Impact:', finding.impact);\n      }\n      if (finding.stepsToReproduce) {\n        this.addLabeledText('Steps to Reproduce:', finding.stepsToReproduce);\n      }\n\n      // POC Images (if any)\n      if (finding.pocType === 'poc' && finding.pocDataURL?.length) {\n        this.addPOCImages('POC:', finding.pocDataURL);\n      }\n      if (finding.pocType === 'retesting' && finding.retestingPocDataURL?.length) {\n        this.addPOCImages('Retesting POC:', finding.retestingPocDataURL);\n      }\n\n      if (finding.mitigation) {\n        this.addLabeledText('Mitigation:', finding.mitigation);\n      }\n      if (finding.references) {\n        this.addLabeledText('References:', finding.references);\n      }\n    }\n  }\n\n  private generateConclusion(findings: Finding[]): void {\n    this.addNewPage();\n    this.destinations['conclusion'] = this.pageNumber;\n    this.addHeading('6. Conclusion', 1);\n\n    const totalFindings = findings.length;\n    const criticalCount = findings.filter(f => f.severity === 'Critical').length;\n    const highCount = findings.filter(f => f.severity === 'High').length;\n\n    let conclusionText = `This security assessment identified ${totalFindings} vulnerabilities across the tested application. `;\n    \n    if (criticalCount > 0) {\n      conclusionText += `${criticalCount} critical vulnerabilities require immediate attention. `;\n    }\n    if (highCount > 0) {\n      conclusionText += `${highCount} high-severity vulnerabilities should be addressed within 7 days. `;\n    }\n    \n    conclusionText += `It is recommended to prioritize remediation based on the severity levels outlined in this report and implement the suggested mitigation strategies to enhance the overall security posture.`;\n\n    this.addText(conclusionText, 12, 'normal');\n  }\n\n  private addLabeledText(label: string, content: string): void {\n    this.checkPageBreak(20);\n    \n    // Add a subtle background box for labeled text sections\n    this.pdf.setFillColor(248, 249, 250); // Very light gray background\n    this.pdf.setDrawColor(224, 224, 224); // Light border\n    this.pdf.setLineWidth(0.2);\n    \n    const labelHeight = 8;\n    const lines = this.pdf.splitTextToSize(content, this.pdfWidth - 15);\n    const contentHeight = lines.length * 6 + 10;\n    const totalHeight = labelHeight + contentHeight;\n    \n    // Draw background box\n    this.pdf.rect(this.margin - 2, this.currentY - 2, this.pdfWidth + 4, totalHeight, 'FD');\n    \n    // Add label\n    this.pdf.setFont('helvetica', 'bold');\n    this.pdf.setFontSize(12);\n    this.pdf.setTextColor(52, 52, 52);\n    this.pdf.text(label, this.margin, this.currentY + 6);\n    this.currentY += labelHeight;\n\n    // Add content with indentation\n    this.pdf.setFont('helvetica', 'normal');\n    this.pdf.setFontSize(11);\n    this.pdf.setTextColor(80, 80, 80);\n    for (const line of lines) {\n      this.checkPageBreak(8);\n      this.pdf.text(line, this.margin + 5, this.currentY + 6);\n      this.currentY += 6;\n    }\n    this.currentY += 8; // Extra spacing after labeled sections\n  }\n\n  private addPOCImages(label: string, images: any[]): void {\n    this.addText(label, 12, 'bold');\n    \n    for (const img of images) {\n      if (img?.url) {\n        try {\n          this.checkPageBreak(80);\n          this.pdf.addImage(img.url, 'PNG', this.margin + 20, this.currentY, this.pdfWidth - 40, 60);\n          this.currentY += 65;\n          \n          if (img.caption) {\n            this.pdf.setFont('helvetica', 'italic');\n            this.pdf.setFontSize(10);\n            this.pdf.setTextColor(85, 85, 85);\n            const captionLines = this.pdf.splitTextToSize(img.caption, this.pdfWidth - 40);\n            for (const line of captionLines) {\n              this.pdf.text(line, this.pageWidth/2, this.currentY, { align: 'center' });\n              this.currentY += 5;\n            }\n            this.currentY += 5;\n          }\n        } catch (error) {\n          console.log('Could not add POC image to PDF');\n        }\n      }\n    }\n  }\n\n  private generateTable(headers: string[], rows: string[][]): void {\n    const rowHeight = 12;\n    const colWidth = this.pdfWidth / headers.length;\n    \n    this.checkPageBreak((rows.length + 1) * rowHeight + 10);\n\n    // Draw headers\n    this.pdf.setDrawColor(0);\n    this.pdf.setLineWidth(0.3);\n    this.pdf.setFillColor(41, 128, 185);\n    \n    for (let i = 0; i < headers.length; i++) {\n      const x = this.margin + (i * colWidth);\n      this.pdf.rect(x, this.currentY, colWidth, rowHeight, 'FD');\n      \n      this.pdf.setFont('helvetica', 'bold');\n      this.pdf.setFontSize(10);\n      this.pdf.setTextColor(255, 255, 255);\n      this.pdf.text(headers[i], x + 2, this.currentY + 8);\n    }\n    this.currentY += rowHeight;\n\n    // Draw rows\n    this.pdf.setTextColor(52, 52, 52);\n    this.pdf.setFont('helvetica', 'normal');\n    \n    for (const row of rows) {\n      this.checkPageBreak(rowHeight + 5);\n      \n      for (let i = 0; i < row.length; i++) {\n        const x = this.margin + (i * colWidth);\n        this.pdf.rect(x, this.currentY, colWidth, rowHeight, 'D');\n        \n        const cellLines = this.pdf.splitTextToSize(row[i], colWidth - 4);\n        for (let j = 0; j < Math.min(cellLines.length, 1); j++) {\n          this.pdf.text(cellLines[j], x + 2, this.currentY + 8 + (j * 5));\n        }\n      }\n      this.currentY += rowHeight;\n    }\n    this.currentY += 10;\n  }\n\n  private getSeverityColor(severity: string): number[] {\n    switch (severity.toLowerCase()) {\n      case 'critical': return [211, 47, 47];\n      case 'high': return [245, 124, 0];\n      case 'medium': return [255, 160, 0];\n      case 'low': return [104, 159, 56];\n      default: return [25, 118, 210];\n    }\n  }\n\n  private updateTableOfContentsWithLinks(): void {\n    // Go back to TOC page (page 2)\n    this.pdf.setPage(2);\n    \n    // Update content table with actual page numbers\n    this.contentTable = [\n      { title: '1. Scan Manifest', page: Object.values(this.destinations)[0] || 3 },\n      { title: '2. Executive Summary', page: Object.values(this.destinations)[1] || 4 },\n      { title: '3. Findings', page: Object.values(this.destinations)[2] || 5 },\n      { title: '4. Vulnerability Rating Table', page: Object.values(this.destinations)[3] || 6 },\n      { title: '5. Vulnerability Details', page: Object.values(this.destinations)[4] || 7 },\n      { title: '6. Conclusion', page: Object.values(this.destinations)[5] || 8 }\n    ];\n\n    // Clear the TOC area and redraw\n    this.pdf.setFillColor(255, 255, 255);\n    this.pdf.rect(this.margin, 40, this.pdfWidth, 100, 'F');\n    \n    let tocY = 50;\n    const rowHeight = 8;\n    const titleWidth = this.pdfWidth * 0.82;\n\n    this.pdf.setFont('helvetica', 'normal');\n    this.pdf.setFontSize(12);\n    this.pdf.setTextColor(52, 52, 52);\n\n    for (const item of this.contentTable) {\n      // Create clickable link\n      const destination = item.title.replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\n      this.pdf.link(this.margin, tocY - 4, titleWidth + 20, rowHeight, {\n        pageNumber: this.destinations[destination] || item.page\n      });\n\n      // Section title with dots\n      this.pdf.text(`• ${item.title}`, this.margin, tocY + 6);\n\n      // Dots line\n      this.pdf.setDrawColor(180, 180, 180);\n      this.pdf.setLineWidth(0.2);\n      const dotsStartX = this.margin + this.pdf.getTextWidth(`• ${item.title}`) + 5;\n      const dotsEndX = this.margin + titleWidth - 5;\n      \n      for (let x = dotsStartX; x < dotsEndX; x += 3) {\n        this.pdf.circle(x, tocY + 3, 0.3, 'F');\n      }\n\n      // Page number\n      const actualPage = this.destinations[destination] || item.page;\n      this.pdf.text(actualPage.toString(), this.margin + titleWidth + 10, tocY + 6);\n\n      tocY += rowHeight;\n    }\n  }\n\n  private addPageNumbers(): void {\n    const totalPages = this.pdf.getNumberOfPages();\n    \n    for (let i = 1; i <= totalPages; i++) {\n      this.pdf.setPage(i);\n      this.pdf.setFont('helvetica', 'normal');\n      this.pdf.setFontSize(10);\n      this.pdf.setTextColor(80, 80, 80);\n      this.pdf.text(`Page ${i}`, this.pageWidth/2, this.pageHeight - 5, { align: 'center' });\n    }\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}