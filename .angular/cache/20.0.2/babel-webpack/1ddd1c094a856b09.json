{"ast":null,"code":"import { inject } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\nimport { tap } from 'rxjs/operators';\nexport const authInterceptor = (req, next) => {\n  const authService = inject(AuthService);\n  const router = inject(Router);\n  const token = authService.getToken();\n  if (token) {\n    const authReq = req.clone({\n      headers: req.headers.set('Authorization', `Bearer ${token}`)\n    });\n    return next(authReq).pipe(\n    // Handle 401/403 errors\n    tap({\n      error: err => {\n        if (err.status === 401 || err.status === 403) {\n          authService.logout();\n          router.navigate(['/login']);\n        }\n      }\n    }));\n  }\n  return next(req);\n};","map":{"version":3,"names":["inject","AuthService","Router","tap","authInterceptor","req","next","authService","router","token","getToken","authReq","clone","headers","set","pipe","error","err","status","logout","navigate"],"sources":["/app/src/app/core/interceptors/auth.interceptor.ts"],"sourcesContent":["import { HttpInterceptorFn } from '@angular/common/http';\nimport { inject } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\nimport { tap } from 'rxjs/operators';\n\nexport const authInterceptor: HttpInterceptorFn = (req, next) => {\n  const authService = inject(AuthService);\n  const router = inject(Router);\n  const token = authService.getToken();\n\n  if (token) {\n    const authReq = req.clone({\n      headers: req.headers.set('Authorization', `Bearer ${token}`)\n    });\n    return next(authReq).pipe(\n      // Handle 401/403 errors\n      tap({\n        error: (err) => {\n          if (err.status === 401 || err.status === 403) {\n            authService.logout();\n            router.navigate(['/login']);\n          }\n        }\n      })\n    );\n  }\n\n  return next(req);\n}; "],"mappings":"AACA,SAASA,MAAM,QAAQ,eAAe;AACtC,SAASC,WAAW,QAAQ,0BAA0B;AACtD,SAASC,MAAM,QAAQ,iBAAiB;AACxC,SAASC,GAAG,QAAQ,gBAAgB;AAEpC,OAAO,MAAMC,eAAe,GAAsBA,CAACC,GAAG,EAAEC,IAAI,KAAI;EAC9D,MAAMC,WAAW,GAAGP,MAAM,CAACC,WAAW,CAAC;EACvC,MAAMO,MAAM,GAAGR,MAAM,CAACE,MAAM,CAAC;EAC7B,MAAMO,KAAK,GAAGF,WAAW,CAACG,QAAQ,EAAE;EAEpC,IAAID,KAAK,EAAE;IACT,MAAME,OAAO,GAAGN,GAAG,CAACO,KAAK,CAAC;MACxBC,OAAO,EAAER,GAAG,CAACQ,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE,UAAUL,KAAK,EAAE;KAC5D,CAAC;IACF,OAAOH,IAAI,CAACK,OAAO,CAAC,CAACI,IAAI;IACvB;IACAZ,GAAG,CAAC;MACFa,KAAK,EAAGC,GAAG,IAAI;QACb,IAAIA,GAAG,CAACC,MAAM,KAAK,GAAG,IAAID,GAAG,CAACC,MAAM,KAAK,GAAG,EAAE;UAC5CX,WAAW,CAACY,MAAM,EAAE;UACpBX,MAAM,CAACY,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;QAC7B;MACF;KACD,CAAC,CACH;EACH;EAEA,OAAOd,IAAI,CAACD,GAAG,CAAC;AAClB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}